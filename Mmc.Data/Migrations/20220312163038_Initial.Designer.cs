// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mmc.Data;

#nullable disable

namespace Mmc.Data.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20220312163038_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Mmc.Core.Entity.BlogMaster", b =>
                {
                    b.Property<int>("BlogMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(11)");

                    b.Property<long>("BlogMasterAuthorAdminId")
                        .HasColumnType("bigint");

                    b.Property<string>("BlogMasterAuthorName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("BlogMasterBody")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BlogMasterPostedDate")
                        .HasColumnType("DATE");

                    b.Property<string>("BlogMasterTitle")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("BlogMasterId");

                    b.HasIndex("BlogMasterAuthorAdminId");

                    b.ToTable("blog_master", (string)null);
                });

            modelBuilder.Entity("Mmc.Core.Entity.UserCredentials", b =>
                {
                    b.Property<int>("UserCredentialsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(11)");

                    b.Property<string>("UserCredentialsEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserCredentialsPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserCredentialsUserId")
                        .HasColumnType("bigint");

                    b.HasKey("UserCredentialsId");

                    b.HasIndex("UserCredentialsUserId")
                        .IsUnique();

                    b.ToTable("User_Credentials", (string)null);
                });

            modelBuilder.Entity("Mmc.Core.Entity.UserMaster", b =>
                {
                    b.Property<long>("UserMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<int>("UserMasterCredentialId")
                        .HasColumnType("int");

                    b.Property<string>("UserMasterName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_name");

                    b.HasKey("UserMasterId");

                    b.ToTable("User_Master", (string)null);
                });

            modelBuilder.Entity("Mmc.Core.Entity.BlogMaster", b =>
                {
                    b.HasOne("Mmc.Core.Entity.UserMaster", "BlogMasterAuthorAdmin")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogMasterAuthorAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogMasterAuthorAdmin");
                });

            modelBuilder.Entity("Mmc.Core.Entity.UserCredentials", b =>
                {
                    b.HasOne("Mmc.Core.Entity.UserMaster", "UserCredentialsUser")
                        .WithOne("UserCredentials")
                        .HasForeignKey("Mmc.Core.Entity.UserCredentials", "UserCredentialsUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserCredentialsUser");
                });

            modelBuilder.Entity("Mmc.Core.Entity.UserMaster", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("UserCredentials")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
