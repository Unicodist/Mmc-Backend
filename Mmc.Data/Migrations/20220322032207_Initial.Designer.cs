// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mmc.Data;

#nullable disable

namespace Mmc.Data.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20220322032207_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Mmc.Blog.Entity.BlogMasterEntity", b =>
                {
                    b.Property<int>("BlogMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("BlogMasterAuthorAdminId")
                        .HasColumnType("bigint");

                    b.Property<string>("BlogMasterAuthorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BlogMasterBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BlogMasterPostedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2022, 3, 22, 9, 7, 7, 415, DateTimeKind.Local).AddTicks(6112));

                    b.Property<string>("BlogMasterTitle")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("BlogMasterId");

                    b.HasIndex("BlogMasterAuthorAdminId");

                    b.ToTable("blog_master", (string)null);
                });

            modelBuilder.Entity("Mmc.Notice.Entity.NoticeMasterEntity", b =>
                {
                    b.Property<long>("NoticeMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("NoticeMasterAuthorId")
                        .HasColumnType("bigint");

                    b.Property<string>("NoticeMasterBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NoticeMasterNoticePicture")
                        .HasColumnType("longtext");

                    b.Property<string>("NoticeMasterTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PostedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2022, 3, 22, 9, 7, 7, 416, DateTimeKind.Local).AddTicks(1595));

                    b.HasKey("NoticeMasterId");

                    b.HasIndex("NoticeMasterAuthorId");

                    b.ToTable("notice_master", (string)null);
                });

            modelBuilder.Entity("Mmc.User.Entity.UserMasterEntity", b =>
                {
                    b.Property<long>("UserMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserMasterName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserMasterId");

                    b.ToTable("User_Master", (string)null);
                });

            modelBuilder.Entity("Mmc.Blog.Entity.BlogMasterEntity", b =>
                {
                    b.HasOne("Mmc.User.Entity.UserMasterEntity", "BlogMasterEntityAuthorAdmin")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogMasterAuthorAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogMasterEntityAuthorAdmin");
                });

            modelBuilder.Entity("Mmc.Notice.Entity.NoticeMasterEntity", b =>
                {
                    b.HasOne("Mmc.User.Entity.UserMasterEntity", "NoticeMasterEntityAuthor")
                        .WithMany("Notices")
                        .HasForeignKey("NoticeMasterAuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NoticeMasterEntityAuthor");
                });

            modelBuilder.Entity("Mmc.User.Entity.UserMasterEntity", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Notices");
                });
#pragma warning restore 612, 618
        }
    }
}
