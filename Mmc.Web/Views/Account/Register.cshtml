@{
    Layout = "_Mmc_Layout";
}
@model Mmc.User.ViewModel.UserCreateViewModel

<div class="d-flex container">
    <div class="container-fluid">
        <form>
          <div class="form-group row">
            <div class="form-group col-md-6">
              @Html.LabelFor(m=>m.FirstName)
              @Html.TextBoxFor(m=>m.FirstName,new{@class="form-control"})
              @Html.ValidationMessageFor(m=>m.FirstName)
            </div>
            <div class="form-group col-md-6">
              @Html.LabelFor(m=>m.LastName)
              @Html.TextBoxFor(m=>m.LastName,new{@class="form-control"})
              @Html.ValidationMessageFor(m=>m.LastName)
            </div>
          </div>
          <div class="form-group">
              @Html.LabelFor(m=>m.Email)
              @Html.TextBoxFor(m=>m.Email,new{@class="form-control", type="email"})
              @Html.ValidationMessageFor(m=>m.Email)
          </div>
          <div class="form-group">
              @Html.LabelFor(m=>m.Password)
              @Html.PasswordFor(m=>m.Password,new{@class="form-control"})
              @Html.ValidationMessageFor(m=>m.Password)
          </div>
          <div class="form-group">
              @Html.LabelFor(m=>m.Confirm)
              @Html.PasswordFor(m=>m.Confirm,new{@class="form-control"})
              @Html.ValidationMessageFor(m=>m.Confirm)
          </div>
          <div class="form-group">
              <div class="form-check">
                  @Html.LabelFor(m=>m.Remember)
                  @Html.CheckBoxFor(m => m.Remember, new {@class = "form-check-input"})
              </div>
          </div>
          <button type="submit" class="btn btn-primary">Sign in</button>
        </form>
    </div>
</div>